// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewCategoryEvent extends ethereum.Event {
  get params(): NewCategoryEvent__Params {
    return new NewCategoryEvent__Params(this);
  }
}

export class NewCategoryEvent__Params {
  _event: NewCategoryEvent;

  constructor(event: NewCategoryEvent) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get image(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class NewPersonEvent extends ethereum.Event {
  get params(): NewPersonEvent__Params {
    return new NewPersonEvent__Params(this);
  }
}

export class NewPersonEvent__Params {
  _event: NewPersonEvent;

  constructor(event: NewPersonEvent) {
    this._event = event;
  }

  get direction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get last_name(): string {
    return this._event.parameters[1].value.toString();
  }

  get first_name(): string {
    return this._event.parameters[2].value.toString();
  }

  get email(): string {
    return this._event.parameters[3].value.toString();
  }

  get image(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class NewPlaceEvent extends ethereum.Event {
  get params(): NewPlaceEvent__Params {
    return new NewPlaceEvent__Params(this);
  }
}

export class NewPlaceEvent__Params {
  _event: NewPlaceEvent;

  constructor(event: NewPlaceEvent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get category(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get title(): string {
    return this._event.parameters[5].value.toString();
  }

  get description(): string {
    return this._event.parameters[6].value.toString();
  }

  get image(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class NewRentEvent extends ethereum.Event {
  get params(): NewRentEvent__Params {
    return new NewRentEvent__Params(this);
  }
}

export class NewRentEvent__Params {
  _event: NewRentEvent;

  constructor(event: NewRentEvent) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get category(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }

  get description(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class NewWithdrawEvent extends ethereum.Event {
  get params(): NewWithdrawEvent__Params {
    return new NewWithdrawEvent__Params(this);
  }
}

export class NewWithdrawEvent__Params {
  _event: NewWithdrawEvent;

  constructor(event: NewWithdrawEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReservApp__getCategoriesResultValue0Struct extends ethereum.Tuple {
  get index(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get image(): string {
    return this[3].toString();
  }
}

export class ReservApp__getMyPlacesResultValue0Struct extends ethereum.Tuple {
  get category(): i32 {
    return this[0].toI32();
  }

  get title(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }
}

export class ReservApp__getPersonByAddressResultValue0Struct extends ethereum.Tuple {
  get first_name(): string {
    return this[0].toString();
  }

  get last_name(): string {
    return this[1].toString();
  }

  get email(): string {
    return this[2].toString();
  }

  get image(): string {
    return this[3].toString();
  }
}

export class ReservApp__getPlaceByIdResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get size(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get category(): i32 {
    return this[5].toI32();
  }

  get title(): string {
    return this[6].toString();
  }

  get description(): string {
    return this[7].toString();
  }

  get image(): string {
    return this[8].toString();
  }
}

export class ReservApp__getPlacesByCategoryResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get size(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get category(): i32 {
    return this[5].toI32();
  }

  get title(): string {
    return this[6].toString();
  }

  get description(): string {
    return this[7].toString();
  }

  get image(): string {
    return this[8].toString();
  }
}

export class ReservApp extends ethereum.SmartContract {
  static bind(address: Address): ReservApp {
    return new ReservApp("ReservApp", address);
  }

  getBalance(): BigInt {
    let result = super.call("getBalance", "getBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBalance", "getBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCategories(): Array<ReservApp__getCategoriesResultValue0Struct> {
    let result = super.call(
      "getCategories",
      "getCategories():((uint8,string,string,string)[])",
      []
    );

    return result[0].toTupleArray<ReservApp__getCategoriesResultValue0Struct>();
  }

  try_getCategories(): ethereum.CallResult<
    Array<ReservApp__getCategoriesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getCategories",
      "getCategories():((uint8,string,string,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<ReservApp__getCategoriesResultValue0Struct>()
    );
  }

  getMyPlaces(): Array<ReservApp__getMyPlacesResultValue0Struct> {
    let result = super.call(
      "getMyPlaces",
      "getMyPlaces():((uint8,string,string)[])",
      []
    );

    return result[0].toTupleArray<ReservApp__getMyPlacesResultValue0Struct>();
  }

  try_getMyPlaces(): ethereum.CallResult<
    Array<ReservApp__getMyPlacesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getMyPlaces",
      "getMyPlaces():((uint8,string,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<ReservApp__getMyPlacesResultValue0Struct>()
    );
  }

  getPersonByAddress(): ReservApp__getPersonByAddressResultValue0Struct {
    let result = super.call(
      "getPersonByAddress",
      "getPersonByAddress():((string,string,string,string))",
      []
    );

    return changetype<ReservApp__getPersonByAddressResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getPersonByAddress(): ethereum.CallResult<
    ReservApp__getPersonByAddressResultValue0Struct
  > {
    let result = super.tryCall(
      "getPersonByAddress",
      "getPersonByAddress():((string,string,string,string))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ReservApp__getPersonByAddressResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getPlaceById(
    category: i32,
    index: BigInt
  ): ReservApp__getPlaceByIdResultValue0Struct {
    let result = super.call(
      "getPlaceById",
      "getPlaceById(uint8,uint256):((uint256,uint256,address,uint256,uint256,uint8,string,string,string))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(category)),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return changetype<ReservApp__getPlaceByIdResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getPlaceById(
    category: i32,
    index: BigInt
  ): ethereum.CallResult<ReservApp__getPlaceByIdResultValue0Struct> {
    let result = super.tryCall(
      "getPlaceById",
      "getPlaceById(uint8,uint256):((uint256,uint256,address,uint256,uint256,uint8,string,string,string))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(category)),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ReservApp__getPlaceByIdResultValue0Struct>(value[0].toTuple())
    );
  }

  getPlacesByCategory(
    category: i32
  ): Array<ReservApp__getPlacesByCategoryResultValue0Struct> {
    let result = super.call(
      "getPlacesByCategory",
      "getPlacesByCategory(uint8):((uint256,uint256,address,uint256,uint256,uint8,string,string,string)[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(category))]
    );

    return result[0].toTupleArray<
      ReservApp__getPlacesByCategoryResultValue0Struct
    >();
  }

  try_getPlacesByCategory(
    category: i32
  ): ethereum.CallResult<
    Array<ReservApp__getPlacesByCategoryResultValue0Struct>
  > {
    let result = super.tryCall(
      "getPlacesByCategory",
      "getPlacesByCategory(uint8):((uint256,uint256,address,uint256,uint256,uint8,string,string,string)[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(category))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<ReservApp__getPlacesByCategoryResultValue0Struct>()
    );
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DestroyCall extends ethereum.Call {
  get inputs(): DestroyCall__Inputs {
    return new DestroyCall__Inputs(this);
  }

  get outputs(): DestroyCall__Outputs {
    return new DestroyCall__Outputs(this);
  }
}

export class DestroyCall__Inputs {
  _call: DestroyCall;

  constructor(call: DestroyCall) {
    this._call = call;
  }
}

export class DestroyCall__Outputs {
  _call: DestroyCall;

  constructor(call: DestroyCall) {
    this._call = call;
  }
}

export class LinkedPersonCall extends ethereum.Call {
  get inputs(): LinkedPersonCall__Inputs {
    return new LinkedPersonCall__Inputs(this);
  }

  get outputs(): LinkedPersonCall__Outputs {
    return new LinkedPersonCall__Outputs(this);
  }
}

export class LinkedPersonCall__Inputs {
  _call: LinkedPersonCall;

  constructor(call: LinkedPersonCall) {
    this._call = call;
  }

  get first_name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get last_name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get email(): string {
    return this._call.inputValues[2].value.toString();
  }

  get image(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class LinkedPersonCall__Outputs {
  _call: LinkedPersonCall;

  constructor(call: LinkedPersonCall) {
    this._call = call;
  }
}

export class NewCategoryCall extends ethereum.Call {
  get inputs(): NewCategoryCall__Inputs {
    return new NewCategoryCall__Inputs(this);
  }

  get outputs(): NewCategoryCall__Outputs {
    return new NewCategoryCall__Outputs(this);
  }
}

export class NewCategoryCall__Inputs {
  _call: NewCategoryCall;

  constructor(call: NewCategoryCall) {
    this._call = call;
  }

  get category(): string {
    return this._call.inputValues[0].value.toString();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get image(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class NewCategoryCall__Outputs {
  _call: NewCategoryCall;

  constructor(call: NewCategoryCall) {
    this._call = call;
  }
}

export class NewPlaceCall extends ethereum.Call {
  get inputs(): NewPlaceCall__Inputs {
    return new NewPlaceCall__Inputs(this);
  }

  get outputs(): NewPlaceCall__Outputs {
    return new NewPlaceCall__Outputs(this);
  }
}

export class NewPlaceCall__Inputs {
  _call: NewPlaceCall;

  constructor(call: NewPlaceCall) {
    this._call = call;
  }

  get category(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get size(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get title(): string {
    return this._call.inputValues[3].value.toString();
  }

  get description(): string {
    return this._call.inputValues[4].value.toString();
  }

  get image(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class NewPlaceCall__Outputs {
  _call: NewPlaceCall;

  constructor(call: NewPlaceCall) {
    this._call = call;
  }
}

export class RentPlaceCall extends ethereum.Call {
  get inputs(): RentPlaceCall__Inputs {
    return new RentPlaceCall__Inputs(this);
  }

  get outputs(): RentPlaceCall__Outputs {
    return new RentPlaceCall__Outputs(this);
  }
}

export class RentPlaceCall__Inputs {
  _call: RentPlaceCall;

  constructor(call: RentPlaceCall) {
    this._call = call;
  }

  get category(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RentPlaceCall__Outputs {
  _call: RentPlaceCall;

  constructor(call: RentPlaceCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
